#!/bin/bash
# ==========================================================================
#  readme    : repo utiliies
#  mail      : joongkeun.kim@lge.com/av9300@gmail.com
# ==========================================================================



##---------------------------------------------------------- DEBUG OPTION
#DEBUG=["echo -e"|:], : means no-operation
DEBUG=:
##============================================================================
## color definition, BOLD is brighter
red='\e[0;31m';  RED='\e[1;31m';  green='\e[0;32m';  GREEN='\e[1;32m';  yellow='\e[0;33m';   YELLOW='\e[1;33m';
blue='\e[0;34m'; BLUE='\e[1;34m'; cyan='\e[0;36m';   CYAN='\e[1;36m';   magenta='\e[0;35m';  NCOL='\e[0m';

#user setting
account=vc.integrator
mirror="/data001/${account}"/mirror


##--------------------------- Menu Functions --------------------------------
##============================================================================
function ShowRun(){ echo "\$ $@" ; "$@" ; }
function GetGitRootPath(){ echo $(git rev-parse --show-toplevel);}



function MoveParentdir(){
## ---------------------------------------------------------------------------
## move parent directory of input dir

   TOPFILE=.repo/manifests
   HERE=$PWD
   T=
   while [[ !( -d $TOPFILE ) || ( "${PWD}" != "${HOME}" ) ]]; do
       T=$PWD
       if [ -d "$TOPFILE" ]; then
           cd $T
           break
       fi
       cd ..
   done
   

   echo -e '\nHit [Ctrl]+[D] to exit this child shell.'
   $SHELL
}



function test(){
## ---------------------------------------------------------------------------
MoveParentdir

}





function handler_menu(){
## ---------------------------------------------------------------------------
printf ${green}
cat << PREFACE
==============================================================
 the menu for repo tools
 -------------------------------------------------------------
 account=$account, user_id=$(id -u ${account}), group_id=$user_id
 home_dir=${home_dir}"
 -------------------------------------------------------------
 supported command: ex) dock list
     info) list, images, images --all, ps, ps --all
     image) build, hello
     run) start, run, exec, debug
     delete) stop, rm, rmi, remove, clean
==============================================================
PREFACE
printf ${NCOL}

    local COLUMNS=60
    PS3=$'\e[00;35m=== Please input command! [Enter:menu, Ctrl+c:exit] === : \e[0m'
    select CHOICE in list images ps build hello start run exec stop remove clean debug find pull push
    do
        handle_commands $CHOICE
    done
}


function handle_commands(){
## ---------------------------------------------------------------------------
local ret=0
    case $1 in
        init) list "${@:2}"                                                 ;;
          images|ps) list "${@:1}"                                          ;;
          image) list images "${@:2}"                                       ;;
        build) build "${@:2}"                                               ;;
        test) test "${@:1}"                               ;;
        "") handler_menu "${@}"                                             ;;
        *) repo "${@}"
          return $ret;;
    esac
}



##============================================================================
## Main
##============================================================================
#set -x
handle_commands $@
if [ $? -ne 0 ];then echo "needto_handle_menu"; fi
