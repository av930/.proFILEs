#!/bin/bash
# ==========================================================================
#  readme    : docker handler
#  mail      : joongkeun.kim@lge.com/av9300@gmail.com
# ==========================================================================


printf ${CYAN}
cat << PREFACE > /dev/null
============================================================================
---------------------------           +             ------------------------
-----------------------                                ---------------------
--------------------       WELCOME TO Docker Control      ------------------
============================================================================
PREFACE
printf ${NCOL}

##---------------------------------------------------------- DEBUG OPTION
#DEBUG=["echo -e"|:], : means no-operation
DEBUG=:
##============================================================================
## color definition, BOLD is brighter
red='\e[0;31m';  RED='\e[1;31m';  green='\e[0;32m';  GREEN='\e[1;32m';  yellow='\e[0;33m';   YELLOW='\e[1;33m';
blue='\e[0;34m'; BLUE='\e[1;34m'; cyan='\e[0;36m';   CYAN='\e[1;36m';   magenta='\e[0;35m';  NCOL='\e[0m';

#user setting
account=vc.integrator
home_dir="/data001/${account}"
user_id=$(id -u ${account})
group_id=$user_id
repo_url="10.158.4.241:8082"

#$1: command, #$2: conatainer name, #$3: container port, #$4: image name
cntr_cmd=$1; cntr_name=$2; cntr_port=$3; cntr_img=$4; cntr_file='';
#$DEBUG "cntr_cmd=[$1] cntr_name=[$2] cntr_port=[$3] cntr_img=[$4]"


##--------------------------- Menu Functions --------------------------------
##============================================================================
function echorun(){
## ---------------------------------------------------------------------------
# ex) echo docker images # must call without quote
    echo "\$ $@" ; "$@";
}

function download_vscdm(){
## ---------------------------------------------------------------------------
    MYSQL_PWD=vcinfra mysql -hvscdm.lge.com -uroot vscdm_db -Bse "SELECT * FROM config_tbl WHERE is_disabled=0 and cnf_nm = 'honda_25_5my'" |sed 's/.*HONDA_25_5MY\(.*}}\)\(.*\)/\1/' | jq .
}



MENU=(
    'ALL' 'build_data' 'proj_config' 'release_cfg' 'file_system_config' 'reviewers' 'commit_msg_rule' 
)

function handler_menu(){
## ---------------------------------------------------------------------------
printf ${green}
cat << PREFACE
===================================================================================================
 the menu for docker tools
 help: http://collab.lge.com/main/x/8X_taQ
 -------------------------------------------------------------------------------------------------
 account=$account, user_id=$(id -u ${account}), group_id=$user_id
 home_dir=${home_dir}"
 -------------------------------------------------------------------------------------------------
 o step: build/pull(image)>> start(container)>> exec(attach)>> stop(container)>> remove(image)
 o step: hello(image)>> run(container)>> exec(attach)>> ...

 supported command category: ex) dock list
 common) list, clean, help
 image) image/images --all, build, hello, find, pull, push, rmi/remove
 container) ps/ps --all, start, run, exec, debug, stop/rm
===================================================================================================
PREFACE
printf ${NCOL}

    #local COLUMNS=30
    #local columns="$(tput cols)"
    #multi-line PS3
    PS3=$'\e[00;34m------------------------------------------------------------------------------------------\e[0m'\
$'\nstep: build/pull(image)>> start(container)>> exec(attach)>> stop(container)>> remove(image)'\
$'\nstep: hello(image)>> run(container)>> exec(attach)>> ...'\
$'\n\e[00;35m=== Please input command! [Number:menu, Ctrl+c:exit] === : \e[0m'

    select CHOICE in "${MENU[@]}"
    do
        handle_commands "${CHOICE%%(*}";
    done    
}


function handle_commands(){
## ---------------------------------------------------------------------------
local ret=0
    case "$1" in
        build) vscdm "${@:2}"                                                 ;;
        release) build "${@:2}"                                               ;;
        project) build "${@:2}"                                               ;;
        file) build "${@:2}"                                               ;;
        commit) build "${@:2}"                                               ;;
        reviwer) build "${@:2}"                                               ;;
        all) help "${@:2}"                                                 ;;
        "") handler_menu "${@}"                                             ;;
        *) docker "${@}"
          return $ret;;
    esac
}


#for source script,
function ____dock(){
## ---------------------------------------------------------------------------
    echo "this is called from sourced dock script"
    handle_commands $@
}

##============================================================================
## Main
##============================================================================
# check if called from source or not.
(return 0 2>/dev/null) && sourced=1 || sourced=0
if [ $sourced -eq 0 ]; then handle_commands $@;else echo "plz run without source." && return; fi
